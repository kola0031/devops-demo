name: 'Terraform Pipeline'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./devops-demo/terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.7.0"

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Plan
      run: terraform plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
      if: github.event_name == 'pull_request'

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        TF_VAR_db_username: ${{ secrets.DB_USERNAME }}

    - name: Get RDS Endpoint
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "RDS_ENDPOINT=$(terraform output -raw rds_endpoint)" >> $GITHUB_ENV

    - name: Deploy Application
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd ../
        docker compose up -d
      env:
        RDS_ENDPOINT: ${{ env.RDS_ENDPOINT }}
        DB_NAME: devopsdb
        DB_USER: ${{ secrets.DB_USERNAME }}
        DB_PASS: ${{ secrets.DB_PASSWORD }}
        ENV_NAME: ${{ github.ref == 'refs/heads/main' && 'Prod' || 'Dev' }} 